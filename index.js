const randomDeg=()=>["45deg","135deg","225deg","315deg"][Math.round(Math.random()*3)];const setGridStyle=(grid,portionX,portionY)=>{grid.style.setProperty("--x-portion",portionX);grid.style.setProperty("--y-portion",portionY);grid.style["display"]="grid";grid.style["gridTemplateColumns"]="repeat(var(--x-portion), 1fr)";grid.style["gridTemplateRows"]="repeat(var(--y-portion), 1fr)";grid.style["overflow"]="hidden";grid.style["gridAutoFlow"]="row dense";grid.style["border"]="1px solid";grid.style["cursor"]="pointer";let style=document.createElement("style");style.innerText=`.maze-generator-cell{grid-column-start:span 3;grid-row-start:span 3}.maze-generator-cell::before{transform:scale(1.41)rotate(var(--deg));content:"";display:block;width:1px;background-color:black;margin:0 auto;height:100%;transition:all var(--second);will-change:transform}`;document.body.appendChild(style)};const setCellStyle=cell=>{cell.className="maze-generator-cell";cell.style.position="relative"};const createMaze=({el="#app",gridSize=20})=>{let grid=document.querySelector(`${el}`);let fragment=document.createDocumentFragment();const portionX=Math.round(grid.clientWidth/gridSize);const portionY=Math.round(grid.clientHeight/gridSize);setGridStyle(grid,portionX,portionY);let size=(portionX*portionY)/9;let cells=[];while(size>0){let cell=document.createElement("div");setCellStyle(cell);cell.style.setProperty("--deg",randomDeg());cell.style.setProperty("--second",`${Math.random()*0.5}s`);cells.push(cell);fragment.appendChild(cell);size--}grid.appendChild(fragment);grid.onclick=()=>{cells.forEach(el=>{el.style.setProperty("--deg",randomDeg())})}};export default createMaze;